@using Microsoft.AspNetCore.Identity

@inject SignInManager<IdentityUser> SignInManager
@inject UserManager<IdentityUser> UserManager

@if (SignInManager.IsSignedIn(User))
{
    <form style="width:100%; margin-right:0px;" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })" method="post" id="logoutForm" class="navbar-right">
        <ul class="nav navbar-nav navbar-right" style="width:100%">
            <li style="width:100%; margin-left:-15px;">
                @{ var id = UserManager.GetUserId(User);}
                <!-- <a asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage">Hello--@UserManager.GetUserName(User)
    !</a>-->
                @{
                    var user = await UserManager.FindByIdAsync(UserManager.GetUserId(User));
                    var roles = await UserManager.GetRolesAsync(user);
                }

                @if (roles.Contains("Admin"))
                {
                    <a asp-area="" asp-controller="Administracija" asp-action="Index">Administracija</a>
                }
                <a asp-area="" asp-controller="Korisnik" asp-action="Edit" asp-route-id="@id">Profil</a>
            </li>
            <li style="width:100%; margin-left:-15px;">
                <button type="submit" class="btn btn-link navbar-btn navbar-link nav-btn">Odjava</button>
            </li>
        </ul>
    </form>
}
else
{
    <ul class="nav navbar-nav navbar-right" style="width:100%">
        <li style="width:100%; margin-left:-15px;"><a asp-area="Identity" asp-page="/Account/Register">Registracija</a></li>
        <li style="width:100%; margin-left:-15px;"><a asp-area="Identity" asp-page="/Account/Login">Prijava</a></li>
    </ul>
}